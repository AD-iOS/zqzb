name: Cydia Repo Auto-Update

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
      
      - name: Create .nojekyll file
        run: |
          # 創建 .nojekyll 文件來禁用 Jekyll 處理
          touch .nojekyll
          echo "Created .nojekyll file to disable Jekyll processing"

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev coreutils

      - name: Check debs directory
        run: |
          if [ ! -d "debs" ]; then
            echo "::warning::debs directory not found, creating empty directory"
            mkdir -p debs
            touch debs/.keep
          fi

      - name: Generate Packages
        run: |
          if [ -d "debs" ] && [ "$(find debs -name '*.deb' | head -n 1)" ]; then
            echo "Found deb files, generating Packages..."
            dpkg-scanpackages -m debs > Packages 2>/dev/null
          else
            echo "No deb files found, creating empty Packages file"
            echo "# Empty Packages file - no deb packages available" > Packages
          fi
          
          gzip -c9 Packages > Packages.gz
          bzip2 -c9 Packages > Packages.bz2
          
          echo "Packages files generated:"
          ls -la Packages*

      - name: Update Release file
        run: |
          CURRENT_DATE=$(date -u +"%a, %d %b %Y %H:%M:%S UTC")
          
          awk -v current_date="$CURRENT_DATE" '
          /^Date:/ { 
              print "Date: " current_date
              next
          }
          /^MD5Sum:/ { 
              print "MD5Sum:"
              system("for file in Packages Packages.gz Packages.bz2; do \
                        if [ -f \"$file\" ]; then \
                          size=$(wc -c < \"$file\" | awk \"{print \\$1}\"); \
                          md5=$(md5sum \"$file\" | cut -d\" \" -f1); \
                          echo \" $md5 $size $file\"; \
                        fi; \
                      done")
              next
          }
          { print }
          ' Release > Release.new
          
          mv Release.new Release
          
          echo "Release file updated with current date and MD5 sums"

      - name: Validate generated files
        run: |
          [ -f "Packages" ] || { echo "::error::Packages file missing"; exit 1; }
          [ -f "Packages.gz" ] || { echo "::error::Packages.gz file missing"; exit 1; }
          [ -f "Release" ] || { echo "::error::Release file missing"; exit 1; }
          [ -f ".nojekyll" ] || { echo "::error::.nojekyll file missing"; exit 1; }
          
          echo "All required files generated and validated successfully"

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add -A
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            echo "Changes detected, committing..."
            git commit -m "Auto-update: $(date +'%Y-%m-%d %H:%M:%S UTC')"
            git push
            echo "Push completed successfully"
          fi